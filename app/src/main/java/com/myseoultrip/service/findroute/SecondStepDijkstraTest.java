package com.myseoultrip.service.findroute;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;

import static com.myseoultrip.SplashActivity.subwayCoords;

public class SecondStepDijkstraTest {
    static int[][] ad;
    static int[] dist;
    static boolean[] visit;
    static int nE, nV;
    static final int inf = 1000000;

    public static int[] subwayIdx = {2	,
            5	,
            15	,
            30	,
            70	,
            74	,
            76	,
            82	,
            90	,
            97	,
            104	,
            106	,
            127	,
            133	,
            139	,
            140	,
            149	,
            156	,
            163	,
            165	,
            170	,
            171	,
            174	,
            175	,
            178	,
            181	,
            187	,
            188	,
            190	,
            194	,
            196	,
            201	,
            226	,
            236	,
            258	,
            260	,
            264	,
            269	,
            273	,
            278	,
            282	,
            284	,
            287	,
            335	,
            340	,
            344	,
            347	,
            351	,
            363	,
            368	,
            369	,
            370	,
            374	,
            375	,
            378	,
            382	,
            391	,
            401	,
            406	,
            416	,
            424	,
            430	,
            434	,
            441	,
            442	,
            450	,
            465	,
            478	,
            485	,
            494	,
            498	,
            499	,
            502	,
            506	,
            515	,
            520	,
            533	,
            545	,
            546	,
            558	,
            591	,
            592	,
            593	,
            594	,
            597	,
            600	,
            607	,
            617	,
            620	,
            621	,
            622	,
            623	,
            627	,
            637	,
            667	,
            692	,
            695	,
            698	,
            19	,
            27	,
            35	,
            80	,
            83	,
            89	,
            118	,
            121	,
            147	,
            153	,
            169	,
            183	,
            209	,
            243	,
            256	,
            280	,
            298	,
            309	,
            324	,
            338	,
            345	,
            356	,
            365	,
            401	,
            411	,
            412	,
            414	,
            416	,
            419	,
            424	,
            432	,
            435	,
            446	,
            466	,
            479	,
            486	,
            511	,
            516	,
            517	,
            538	,
            540	,
            542	,
            549	,
            575	,
            577	,
            578	,
            598	,
            649	,
            677	,
            679	,
            685	,
            3	,
            45	,
            48	,
            54	,
            80	,
            91	,
            108	,
            125	,
            137	,
            150	,
            159	,
            160	,
            161	,
            166	,
            176	,
            186	,
            214	,
            229	,
            242	,
            262	,
            295	,
            311	,
            389	,
            423	,
            447	,
            452	,
            457	,
            461	,
            482	,
            492	,
            502	,
            528	,
            532	,
            538	,
            571	,
            579	,
            586	,
            594	,
            603	,
            618	,
            649	,
            671	,
            688	,
            694	,
            44	,
            57	,
            69	,
            104	,
            112	,
            129	,
            135	,
            146	,
            152	,
            158	,
            181	,
            183	,
            197	,
            233	,
            249	,
            250	,
            252	,
            266	,
            298	,
            302	,
            305	,
            316	,
            319	,
            340	,
            358	,
            366	,
            387	,
            394	,
            397	,
            408	,
            428	,
            440	,
            448	,
            500	,
            554	,
            557	,
            587	,
            588	,
            610	,
            623	,
            645	,
            646	,
            649	,
            666	,
            674	,
            675	,
            683	,
            700	,
            24	,
            29	,
            33	,
            34	,
            52	,
            62	,
            73	,
            78	,
            95	,
            100	,
            111	,
            115	,
            118	,
            145	,
            183	,
            203	,
            211	,
            217	,
            219	,
            220	,
            234	,
            240	,
            255	,
            257	,
            259	,
            326	,
            334	,
            381	,
            405	,
            406	,
            431	,
            445	,
            454	,
            468	,
            474	,
            475	,
            486	,
            488	,
            492	,
            496	,
            507	,
            511	,
            522	,
            540	,
            583	,
            594	,
            629	,
            633	,
            649	,
            681	,
            690	,
            53	,
            62	,
            79	,
            87	,
            138	,
            162	,
            177	,
            180	,
            190	,
            206	,
            221	,
            225	,
            265	,
            271	,
            281	,
            295	,
            305	,
            323	,
            325	,
            330	,
            347	,
            412	,
            449	,
            457	,
            480	,
            482	,
            534	,
            536	,
            544	,
            556	,
            614	,
            625	,
            633	,
            656	,
            672	,
            679	,
            691	,
            702	,
            5	,
            21	,
            35	,
            54	,
            66	,
            75	,
            95	,
            99	,
            120	,
            122	,
            126	,
            131	,
            135	,
            141	,
            153	,
            171	,
            210	,
            215	,
            231	,
            232	,
            253	,
            270	,
            285	,
            286	,
            289	,
            297	,
            308	,
            317	,
            318	,
            320	,
            386	,
            398	,
            415	,
            433	,
            438	,
            471	,
            502	,
            518	,
            552	,
            580	,
            581	,
            605	,
            606	,
            612	,
            628	,
            631	,
            635	,
            647	,
            656	,
            669	,
            670	,
            3	,
            25	,
            130	,
            143	,
            237	,
            241	,
            245	,
            276	,
            303	,
            353	,
            383	,
            396	,
            439	,
            451	,
            575	,
            582	,
            629	,
            7	,
            32	,
            54	,
            67	,
            86	,
            94	,
            115	,
            132	,
            133	,
            147	,
            197	,
            204	,
            205	,
            212	,
            279	,
            301	,
            310	,
            314	,
            331	,
            353	,
            355	,
            359	,
            360	,
            384	,
            410	,
            420	,
            421	,
            422	,
            467	,
            473	,
            475	,
            484	,
            507	,
            598	,
            611	,
            613	,
            676	,
            704	,
            42	,
            61	,
            283	,
            307	,
            371	,
            418	,
            477	,
            550	,
            553	,
            644	,
            662	,
            12	,
            26	,
            59	,
            62	,
            85	,
            92	,
            103	,
            107	,
            142	,
            150	,
            164	,
            168	,
            173	,
            206	,
            223	,
            244	,
            261	,
            320	,
            332	,
            337	,
            340	,
            388	,
            429	,
            435	,
            444	,
            455	,
            459	,
            460	,
            464	,
            468	,
            497	,
            502	,
            511	,
            519	,
            520	,
            523	,
            527	,
            529	,
            537	,
            543	,
            554	,
            570	,
            572	,
            608	,
            619	,
            637	,
            654	,
            661	,
            664	,
            668	,
            673	,
            682	,
            685	,
            693	,
            695	,
            702	,
            14	,
            17	,
            28	,
            76	,
            98	,
            102	,
            114	,
            128	,
            157	,
            216	,
            223	,
            263	,
            268	,
            300	,
            320	,
            327	,
            409	,
            608	,
            626	,
            637	,
            642	,
            648	,
            660	,
            665	,
            695	,
            40	,
            50	,
            62	,
            68	,
            115	,
            206	,
            212	,
            340	,
            489	,
            525	,
            561	,
            562	,
            636	,
            685	,
            13	,
            21	,
            31	,
            84	,
            88	,
            109	,
            155	,
            166	,
            227	,
            228	,
            230	,
            237	,
            247	,
            274	,
            276	,
            315	,
            339	,
            346	,
            356	,
            360	,
            385	,
            389	,
            391	,
            393	,
            404	,
            453	,
            456	,
            490	,
            495	,
            511	,
            550	,
            589	,
            604	,
            640	,
            641	,
            658	,
            678	,
            124	,
            144	,
            373	,
            379	,
            399	,
            437	,
            481	,
            500	,
            530	,
            535	,
            558	,
            563	,
            569	,
            684	,
            19	,
            71	,
            72	,
            199	,
            247	,
            328	,
            364	,
            395	,
            461	,
            463	,
            589	,
            632	,
            662	,
            23	,
            58	,
            109	,
            113	,
            192	,
            202	,
            235	,
            275	,
            304	,
            403	,
            472	,
            524	,
            584	,
            615	,
            643	,
            1	,
            8	,
            271	,
            293	,
            294	,
            312	,
            313	,
            366	,
            376	,
            377	,
            424	,
            585	,
            689	,
            43	,
            47	,
            60	,
            195	,
            254	,
            267	,
            329	,
            380	,
            470	,
            547	,
            548	,
            655	,
            698	,
            701	,
            705	,
            9	,
            10	,
            11	,
            37	,
            38	,
            39	,
            40	,
            123	,
            179	,
            218	,
            222	,
            239	,
            333	,
            336	,
            349	,
            350	,
            352	,
            400	,
            443	,
            509	,
            510	,
            526	,
            560	,
            564	,
            566	,
            600	,
            602	,
            16	,
            18	,
            46	,
            49	,
            50	,
            93	,
            101	,
            189	,
            193	,
            200	,
            246	,
            251	,
            287	,
            289	,
            291	,
            292	,
            362	,
            372	,
            427	,
            491	,
            530	,
            565	,
            566	,
            568	,
            573	,
            574	,
            616	,
            653	,
            659	,
    };

    public static Map<Integer,Integer> codeToIdx = new HashMap<Integer, Integer>();

    public static int ssp(int start, int end){
        dist[start] = 0;    // 최초 시작 값 distance 초기화
        String s = "";
        for( int j = 0; j < nV; j++) // dist 값을 한번 초기화 했으므로 n-1번만 진행
        {
            int min = inf+1;    // dist 최소값 찾기 위한 임시 값 초기화
            int index = -1;
            for(int k = 1; k <= nV; k++){
                if(visit[k] == false && min > dist[k]){
                    min = dist[k];
                    index = k;
                }
            }
            visit[index] = true;
            s += index + " ";  // 경로를 체크하는 방법

            for(int l = 1; l <= nV; l++){
                if(ad[index][l] != 0 && dist[l] > dist[index] + ad[index][l]){ //인접 행렬을 검사하여 최적의 값을 찾아
                    dist[l] = dist[index] + ad[index][l];
                }

            }
        }

//        for(int i = 1; i <= nV; i++){
//            System.out.print(dist[i]+" ");
//        }
//        System.out.println();
//        System.out.println(s);
//        System.out.println(start+"에서 "+end+"까지 걸리는 시간: "+dist[end]);
        return dist[end];
    }

    public static int initDijk(int start, int end) throws UnsupportedEncodingException {
        nV = 705;
        nE = 21;

        ad = new int[nV+1][nV+1];
        dist = new int[nV+1];
        visit = new boolean[nV+1];

        for(int i = 1; i <= nV; i++){
            dist[i] = inf;   //임의의 무한한 값으로 거리값 초기화
        }

        int tmp = 0;
        int tmp2 = 0;
        byte[] bytes = new byte[0];
        for(int i = 0; i<subwayIdx.length-1; i++) {
            if(subwayCoords.get(i).getLineNum().equals(subwayCoords.get(i+1).getLineNum())){
                //Log.i("myTag","tmp: "+subwayCoords.get(i).getStationCd()+" / tmp2: "+(subwayCoords.get(i+1).getStationCd()));

                tmp = subwayIdx[i];
                tmp2 = subwayIdx[i+1];
                ad[tmp][tmp2] = ad[tmp2][tmp] = 2;
            }
        }


        //TODO 수정 필요
        for(int i = 0; i<subwayIdx.length-1; i++){
            codeToIdx.put(subwayIdx[i],i);
        }

        int time = ssp(start, end);
        return time;
    }
}
